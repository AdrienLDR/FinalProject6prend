Index: src/main/java/com/example/demo/HelloApplication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.demo;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Insets;\r\nimport javafx.geometry.Pos;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.layout.HBox;\r\nimport javafx.scene.layout.StackPane;\r\nimport javafx.scene.layout.VBox;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.scene.text.Text;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.util.List;\r\n\r\npublic class HelloApplication extends Application {\r\n\r\n    private Stage primaryStage;\r\n    private GridPane gridPane;\r\n    private VBox player1Cards;\r\n    private VBox player2Cards;\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        this.primaryStage = primaryStage;\r\n        primaryStage.setTitle(\"6 Qui Prend\");\r\n\r\n        createModeSelectionScene();\r\n    }\r\n\r\n    private void createModeSelectionScene() {\r\n        VBox root = new VBox();\r\n        root.setAlignment(Pos.CENTER);\r\n        root.setSpacing(20);\r\n        root.setPadding(new Insets(20));\r\n\r\n        Label titleLabel = new Label(\"6 Qui Prend\");\r\n        titleLabel.setFont(Font.font(\"Arial\", FontWeight.BOLD, 24));\r\n\r\n        Button onePlayerButton = new Button(\"1 Joueur\");\r\n        onePlayerButton.setOnAction(e -> startGame(1));\r\n\r\n        Button twoPlayersButton = new Button(\"2 Joueurs\");\r\n        twoPlayersButton.setOnAction(e -> startGame(2));\r\n\r\n        root.getChildren().addAll(titleLabel, onePlayerButton, twoPlayersButton);\r\n\r\n        Scene scene = new Scene(root, 400, 300);\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n    private void startGame(int numPlayers) {\r\n        gridPane = createGridPane();\r\n        addPlayerLabels(gridPane);\r\n        addCardsToPlayers(gridPane, numPlayers);\r\n        addRowsToGridPane(gridPane);\r\n\r\n        Scene scene = new Scene(gridPane, 800, 600);\r\n        scene.getStylesheets().add(getClass().getResource(\"styles.css\").toExternalForm());\r\n\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n    private GridPane createGridPane() {\r\n        GridPane gridPane = new GridPane();\r\n        gridPane.setPadding(new Insets(10));\r\n        gridPane.setHgap(10);\r\n        gridPane.setVgap(10);\r\n        gridPane.setAlignment(Pos.CENTER);\r\n        return gridPane;\r\n    }\r\n\r\n    private void addRowsToGridPane(GridPane gridPane) {\r\n        // Create a separate GridPane for the board cards\r\n        GridPane boardPane = new GridPane();\r\n        boardPane.setAlignment(Pos.CENTER);\r\n        boardPane.setHgap(10);\r\n        boardPane.setVgap(10);\r\n\r\n        // Add the board cards to the boardPane\r\n        for (int row = 0; row < 4; row++) {\r\n            for (int col = 0; col < 6; col++) {\r\n                StackPane cardPane = createCardRectangle(row * 6 + col + 1);\r\n                boardPane.add(cardPane, col, row);\r\n            }\r\n        }\r\n\r\n        // Add the boardPane to the main gridPane\r\n        gridPane.add(boardPane, 1, 2, 3, 4);\r\n\r\n        // Add empty space between player card rows and board rows\r\n        VBox emptySpace = new VBox();\r\n        emptySpace.setMinHeight(20); // Adjust the height of the empty space as needed\r\n        gridPane.add(emptySpace, 1, 6, 1, 1);\r\n    }\r\n\r\n\r\n\r\n\r\n    private void addPlayerLabels(GridPane gridPane) {\r\n        Label player1Label = createPlayerLabel(\"Joueur 1\");\r\n        Label player2Label = createPlayerLabel(\"Joueur 2\");\r\n\r\n        gridPane.add(player1Label, 0, 1);\r\n        gridPane.add(player2Label, 2, 1);\r\n    }\r\n\r\n    private Label createPlayerLabel(String playerName) {\r\n        Label label = new Label(playerName);\r\n        label.getStyleClass().add(\"player-label\");\r\n        return label;\r\n    }\r\n\r\n    private void addCardsToPlayers(GridPane gridPane, int numPlayers) {\r\n        Joueur joueur1 = new Joueur();\r\n        Joueur joueur2 = new Joueur();\r\n\r\n        List<Joueur> joueurs = List.of(joueur1, joueur2);\r\n        Carte.distribuerCartes(joueurs);\r\n\r\n        player1Cards = createPlayerCards(joueur1);\r\n        HBox player1Container = new HBox(player1Cards);\r\n        player1Container.setAlignment(Pos.CENTER_LEFT);\r\n        gridPane.add(player1Container, 0, 2);\r\n\r\n        if (numPlayers == 2) {\r\n            player2Cards = createPlayerCards(joueur2);\r\n            HBox player2Container = new HBox(player2Cards);\r\n            player2Container.setAlignment(Pos.CENTER_RIGHT);\r\n            gridPane.add(player2Container, 2, 2);\r\n        }\r\n    }\r\n\r\n    private VBox createPlayerCards(Joueur joueur) {\r\n        VBox playerCards = new VBox();\r\n        playerCards.setSpacing(10);\r\n\r\n        List<Carte> cartes = joueur.getCartes();\r\n        for (Carte carte : cartes) {\r\n            StackPane cardPane = createCardRectangle(carte.getNumero());\r\n\r\n            HBox cardBox = new HBox(cardPane);\r\n            cardBox.setAlignment(Pos.CENTER);\r\n\r\n            playerCards.getChildren().add(cardBox);\r\n        }\r\n\r\n        return playerCards;\r\n    }\r\n\r\n    private StackPane createCardRectangle(int cardNumber) {\r\n        Rectangle rectangle = new Rectangle(30, 40);\r\n        rectangle.getStyleClass().add(\"card-rectangle\");\r\n\r\n        Text cardNumberText = new Text(String.valueOf(cardNumber));\r\n        cardNumberText.getStyleClass().add(\"card-number\");\r\n\r\n        StackPane cardPane = new StackPane(rectangle, cardNumberText);\r\n        cardPane.setAlignment(Pos.CENTER);\r\n\r\n        return cardPane;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch(args);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/demo/HelloApplication.java b/src/main/java/com/example/demo/HelloApplication.java
--- a/src/main/java/com/example/demo/HelloApplication.java	(revision a403ce772888cd304d88af0ca5becbb28a83f271)
+++ b/src/main/java/com/example/demo/HelloApplication.java	(date 1685031601430)
@@ -144,7 +144,7 @@
 
         List<Carte> cartes = joueur.getCartes();
         for (Carte carte : cartes) {
-            StackPane cardPane = createCardRectangle(carte.getNumero());
+            StackPane cardPane = createCardRectangle(carte.getNumber());
 
             HBox cardBox = new HBox(cardPane);
             cardBox.setAlignment(Pos.CENTER);
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"corretto-20\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision a403ce772888cd304d88af0ca5becbb28a83f271)
+++ b/.idea/misc.xml	(date 1685031601438)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="corretto-20" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_20" default="true" project-jdk-name="corretto-20" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6d266e09-ab76-4484-af96-392ff4c9e7f5\" name=\"Changes\" comment=\"dadazdzda\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo/Card.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo/HelloApplication.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo/HelloApplication.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/demo/Joueur.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/demo/Joueur.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2QGI2R7oyIDk78YXbtqSN7Vus2a\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Unnamed\" type=\"Application\" factoryName=\"Application\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.demo.HelloApplication\" />\r\n      <module name=\"demo\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6d266e09-ab76-4484-af96-392ff4c9e7f5\" name=\"Changes\" comment=\"\" />\r\n      <created>1684973283959</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1684973283959</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"dadazdzda\">\r\n      <created>1684973567459</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1684973567459</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"dadazdzda\">\r\n      <created>1685023339733</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685023339733</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"dadazdzda\">\r\n      <created>1685023460134</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685023460134</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"dadazdzda\">\r\n      <created>1685030434541</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1685030434541</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"dadazdzda\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"dadazdzda\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a403ce772888cd304d88af0ca5becbb28a83f271)
+++ b/.idea/workspace.xml	(date 1685084783388)
@@ -5,10 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="6d266e09-ab76-4484-af96-392ff4c9e7f5" name="Changes" comment="dadazdzda">
-      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/demo/Card.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo/HelloApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo/HelloApplication.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/demo/Joueur.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/demo/Joueur.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
